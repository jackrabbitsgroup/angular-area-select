"use strict";angular.module("jackrabbitsgroup.angular-area-select",[]).directive("jrgAreaSelect",["$timeout",function($timeout){return{restrict:"A",transclude:!0,scope:{coords:"="},template:function(element,attrs){var defaultsAttrs={};for(var xx in defaultsAttrs)void 0===attrs[xx]&&(attrs[xx]=defaultsAttrs[xx]);var html="<div style='position:relative;'><span class='jrg-area-select-ele' ng-transclude></span><div class='jrg-area-select-blurred' style='top:{{(coords.ele.top -offsets.ele.top)}}px; left:{{(coords.ele.left -offsets.ele.left)}}px; height:{{(coords.ele.bottom -coords.ele.top)}}px; width:{{(coords.select.left -coords.ele.left)}}px;'>&nbsp;</div><div class='jrg-area-select-blurred' style='top:{{(coords.ele.top -offsets.ele.top)}}px; left:{{(coords.select.right -offsets.ele.left)}}px; height:{{(coords.ele.bottom -coords.ele.top)}}px; width:{{(coords.ele.right -coords.select.right)}}px;'>&nbsp;</div><div>coords: {{coords}}</div><div>coordsTemp: {{coordsTemp}}</div><div>offsets: {{offsets}}</div></div>";return html},link:function(){},controller:function($scope,$element){function init(){getEleCoords({})}function start(evt){var xx=evt.pageX,yy=evt.pageY;console.log("starting"),xx<$scope.coords.ele.left?xx=$scope.coords.ele.left:xx>$scope.coords.ele.right&&(xx=$scope.coords.ele.right),yy<$scope.coords.ele.top?yy=$scope.coords.ele.top:yy>$scope.coords.ele.bottom&&(yy=$scope.coords.ele.bottom),$scope.coordsTemp.start.x=xx,$scope.coordsTemp.start.y=yy,$scope.state.started=!0,$scope.state.ended=!1}function end(evt,params){move(evt,params),$scope.state.started&&(console.log("ending"),$scope.state.ended=!0),$scope.state.started=!1}function move(evt){if($scope.state.started){console.log("moving");var xx=evt.pageX,yy=evt.pageY;xx>$scope.coords.ele.right?xx=$scope.coords.ele.right:xx<$scope.coords.ele.left&&(xx=$scope.coords.ele.left),yy>$scope.coords.ele.bottom?yy=$scope.coords.ele.bottom:yy<$scope.coords.ele.top&&(yy=$scope.coords.ele.top),$scope.coordsTemp.end.x=xx,$scope.coordsTemp.end.y=yy,$scope.coordsTemp.end.x<$scope.coordsTemp.start.x?($scope.coords.select.left=$scope.coordsTemp.end.x,$scope.coords.select.right=$scope.coordsTemp.start.x):($scope.coords.select.left=$scope.coordsTemp.start.x,$scope.coords.select.right=$scope.coordsTemp.end.x),$scope.coordsTemp.end.y<$scope.coordsTemp.start.y?($scope.coords.select.top=$scope.coordsTemp.end.y,$scope.coords.select.bottom=$scope.coordsTemp.start.y):($scope.coords.select.top=$scope.coordsTemp.start.y,$scope.coords.select.bottom=$scope.coordsTemp.end.y)}}function scopeApply(){$scope.$$phase||$scope.$apply()}function getEleCoords(){$timeout(function(){var rect=eles.main[0].getBoundingClientRect();$scope.coords.ele={left:rect.left,right:rect.right,top:rect.top,bottom:rect.bottom},$scope.offsets.ele={top:rect.top,left:rect.left}},100)}var eles={main:$element.find("span"),doc:angular.element(document)};$scope.offsets={ele:{top:0,left:0}},$scope.state={started:!1,ended:!1},$scope.coordsTemp={start:{x:0,y:0},end:{x:0,y:0}},$scope.coords={ele:{left:0,right:0,top:0,bottom:0},select:{left:0,right:0,top:0,bottom:0}},eles.doc.on("mousedown",function(evt){console.log("mousedown"),start(evt,{}),scopeApply({})}),eles.doc.on("touchstart",function(evt){console.log("touchstart"),start(evt,{}),scopeApply({})}),eles.doc.on("mouseup",function(evt){console.log("mouseup"),end(evt,{}),scopeApply({})}),eles.doc.on("touchend",function(evt){console.log("touchend"),end(evt,{}),scopeApply({})}),eles.doc.on("mousemove",function(evt){console.log("mousemove"),move(evt,{}),scopeApply({})}),eles.doc.on("touchmove",function(evt){console.log("touchmove"),move(evt,{}),scopeApply({})}),init({})}}}]);